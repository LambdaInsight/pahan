---
- name: Removing requiretty
  lineinfile: dest=/etc/sudoers line='Defaults    requiretty' state=absent
  become: yes
  vars:
    ansible_ssh_pipelining: no

- name: Setting up /etc/environment
  lineinfile: dest=/etc/environment line={{ item.line }}  state=present
  with_items:
    - {'line': 'LANG=en_US.utf-8'}
    - {'line': 'LC_ALL=en_US.utf-8'}
  become: yes

- name: Check if tools are installed
  stat: path={{ item.path }}
  with_items:
    - {'name': mlocate,         'path': /usr/bin/updatedb}
    - {'name': vim,             'path': /usr/bin/vim}
    - {'name': screen,          'path': /usr/bin/screen}
    - {'name': tmux,            'path': /usr/bin/tmux}
    - {'name': fish,            'path': /usr/bin/fish}
    - {'name': net-tools,       'path': /usr/sbin/ifconfig}
    - {'name': bind-utils,      'path': /usr/bin/host}
    - {'name': chrony,          'path': /usr/sbin/chronyd}
    - {'name': epel-release,    'path': /usr/share/doc/epel-release-7}
    - {'name': mc,              'path': /usr/bin/mc}
    - {'name': jq,              'path': /bin/jq}
    - {'name': htop,            'path': /usr/bin/htop}
    - {'name': yum-versionlock, 'path': /usr/share/man/man1/yum-versionlock.1.gz}
  register: tools_installed
  become: yes

- name: install the epel-release-latest-7 rpm from a remote repo
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present
  become: yes

- name: Installing tools
  yum: name={{ item.item.name }} state=present
  with_items: "{{ tools_installed.results }}"
  when: item.stat.exists == false
  become: yes

- name: Rendering templates
  template: src={{ item.name }}.j2 dest={{ item.path }} owner=root group=root mode=0644
  with_items:
    - {'name': chrony.conf, 'path': /etc/chrony.conf}
    - {'name': limits.conf, 'path': /etc/security/limits.conf}
  become: yes

- name: Removing limits.d
  file: path=/etc/security/limits.d state=absent
  become: yes

- name: Make sure Chrony is started up
  service: name=chronyd state=started enabled=yes
  become: yes

- name: Disables ipv6
  sysctl: name={{ item.name }} value={{ item.value }} state=present sysctl_set=yes reload=yes
  become: yes
  with_items:
    - {'name': net.ipv6.conf.all.disable_ipv6,        'value': 1}
    - {'name': net.ipv6.conf.default.disable_ipv6,    'value': 1}

- name: Ensure the firewall is disabled
  become: yes
  service: name=firewalld state=stopped enabled=no
  ignore_errors: yes

- name: NSA hack disabled
  selinux: state=disabled
  become: yes
  changed_when: False

- name: Rendering sysctl
  sysctl: name={{ item.name }} value={{ item.value }} state=present
  with_items:
    - {'name': vm.swappiness,                 'value': 5}
    - {'name': net.core.rmem_max,             'value': 16777216}
    - {'name': net.core.wmem_max,             'value': 16777216}
    - {'name': net.ipv4.tcp_rmem,             'value': '4096 87380 16777216'}
    - {'name': net.ipv4.tcp_wmem,             'value': '4096 87380 16777216'}
    - {'name': net.ipv4.tcp_tw_reuse,         'value': 1}
    - {'name': net.ipv4.tcp_tw_recycle,       'value': 1}
    - {'name': net.ipv4.tcp_fin_timeout,      'value': 30}
    - {'name': net.ipv4.tcp_syncookies,       'value': 1}
    - {'name': net.ipv4.tcp_max_syn_backlog,  'value': 65536}
  become: yes

- name: Updating system
  command: /usr/bin/yum update -y
  args:
    warn: false
  become: yes

# - name: Rebooting OS
#   command: reboot
#   when: hostvars['all'].reboot_ok == 'yes'
#   become: yes
